name: "Build"
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  prepare-release:
    name: "Prepare the release"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.extract_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3
      - name: "web-ext lint"
        id: web-ext-lint
        uses: kewisch/action-web-ext@v1
        with:
          cmd: lint
          source: src/web-ext
          channel: unlisted
      - name: Extract version from manifest.json
        id: extract_version
        run: echo "::set-output name=version::$(jq -r '.version' manifest.json)"
        working-directory: src/web-ext

      - name: Creating Git release tag for the "${{ steps.extract_version.outputs.version }}" version
        run: |
          gh release create "${{ steps.extract_version.outputs.version }}" \
          --title "Release ${{ steps.extract_version.outputs.version }}" \
          --latest \
          --generate-notes \
          --target "${{github.sha}}"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"


  build-webext:
    needs: prepare-release
    name: "Build Web extension"
    runs-on: ubuntu-latest
    outputs:
      version: "${{ needs.prepare-release.outputs.version }}"
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3

      - name: "web-ext build"
        id: web-ext-build
        uses: kewisch/action-web-ext@v1
        with:
          cmd: build
          source: src/web-ext
          filename: "{name}-{version}.xpi"
          ignoreFiles: '[ "package.json","package-lock.json","yarn.lock" ]'

      - name: Attach artifact to release"${{ needs.prepare-release.outputs.version }}"
        run: |
          gh release upload "${{ needs.prepare-release.outputs.version }}" "${{ steps.web-ext-build.outputs.target }}#aws-ssm-addon-${{ needs.prepare-release.outputs.version }}.xpi"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

      - name: Upload XPI file as artifact
        uses: actions/upload-artifact@v3
        with:
          name: "aws-ssm-addon-${{ needs.prepare-release.outputs.version }}.xpi"
          path: "${{ steps.web-ext-build.outputs.target }}"

  build-ps1:
    needs: prepare-release
    name: "Build Binaries"
    runs-on: windows-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
      - name: Install required PowerShell modules
        shell: powershell
        run: |
          Install-Module ps2exe -ErrorAction Stop -Force
      - name: fromPs1 to exe
        shell: powershell
        run: |
          Invoke-ps2exe ./src/ps1/wsl.ps1 ./wsl-wrapper.exe
      
      - name: Attach artifact to release"${{ needs.prepare-release.outputs.version }}"
        run: |
          gh release upload "${{ needs.prepare-release.outputs.version }}" "./wsl-wrapper.exe#wsl-wrapper.exe-${{ needs.prepare-release.outputs.version }}"
        env:
          GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"

  sign-xpi:
    needs: build-webext
    name: "Sign the extension"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        id: download
        with:
          name: "aws-ssm-addon-${{ needs.build-webext.outputs.version }}.xpi"

      - name: "web-ext sign"
        if: always()
        id: web-ext-sign
        uses: kewisch/action-web-ext@v1
        with:
          cmd: sign
          source: "aws_ssm_wsl-${{ needs.build-webext.outputs.version }}.xpi"
          channel: unlisted
          apiKey: ${{ secrets.AMO_SIGN_KEY }}
          apiSecret: ${{ secrets.AMO_SIGN_SECRET }}
          timeout: 900000
